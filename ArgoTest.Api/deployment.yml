apiVersion: apps/v1
kind: Deployment
metadata:
  name: ArgoTest.Api-deployment
  labels:
    app: ArgoTest.Api
spec:
  replicas: 2  # Número de pods
  selector:
    matchLabels:
      app: ArgoTest.Api
  template:
    metadata:
      labels:
        app: ArgoTest.Api
    spec:
      containers:
      - name: ArgoTest.Api
        image: tu-registro.azurecr.io/webapi:latest  # 📌 Cambia por tu imagen Docker
        ports:
        - containerPort: 80
        env:
        - name: ASPNETCORE_ENVIRONMENT
          value: "Production"
        - name: DOTNET_SYSTEM_GLOBALIZATION_INVARIANT
          value: "true"
        - name: ASPNETCORE_URLS
          value: "http://+:80"  # 📌 Asegurar que escuche en todos los puertos
---
apiVersion: v1
kind: Service
metadata:
  name: webapi-service
spec:
  selector:
    app: webapi
  ports:
    - protocol: TCP
      port: 80
      targetPort: 80
  type: ClusterIP
---
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  name: webapi-ingress
  annotations:
    nginx.ingress.kubernetes.io/rewrite-target: /
spec:
  rules:
  - host: api.tudominio.com  # 📌 Cambia esto por tu dominio
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: webapi-service
            port:
              number: 80
